{"version":3,"file":"static/js/804.d8f78fc6.chunk.js","mappings":"mOAEMA,E,QAAaC,GAAAA,WAAH,8T,SCMVC,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAkDZ,EA/CgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEA,GAA4BF,EAAAA,EAAAA,UAASH,GAArC,eAAOM,EAAP,KAAeC,EAAf,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACRD,EAAUP,IACVS,EAAAA,EAAAA,IAAgBR,GACbS,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACFA,EAAQC,QAKbP,EAAWM,GACXJ,EAAUP,IAJRO,EAAUP,EAKb,IACAa,OAAM,SAAAC,GAELP,EAAUP,EACX,GACJ,GAAE,CAACC,KAGF,8BAGGK,IAAWN,IACV,wBACGI,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,IAAxB,OACX,yBACE,UAACrB,EAAD,CAAYsB,KAAMD,EAAlB,WACE,uCAAeF,MACf,0BACE,SAAC,MAAD,CAAaI,KAAM,KAClBH,SALEF,EADE,OAetB,C,yLCzDKM,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACoBC,MAAM,GAAD,OAAIH,EAAJ,wCAA4CC,IADrE,cACQG,EADR,gBAEeA,EAAIC,OAFnB,mHAKeC,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BZ,GAA5B,uFACoBS,MAAM,GAAD,OAAIH,EAAJ,kBAAsBN,EAAtB,oBAAoCO,IAD7D,cACQG,EADR,gBAEeA,EAAIC,OAFnB,mHAKeE,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4Bb,GAA5B,uFACoBS,MAAM,GAAD,OAAIH,EAAJ,kBAAsBN,EAAtB,4BAA4CO,IADrE,cACQG,EADR,gBAEeA,EAAIC,OAFnB,mHAKelB,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BO,GAA/B,uFACoBS,MAAM,GAAD,OAAIH,EAAJ,kBAAsBN,EAAtB,4BAA4CO,IADrE,cACQG,EADR,gBAEeA,EAAIC,OAFnB,mHAKeG,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,uFACoBN,MAAM,GAAD,OAClBH,EADkB,iCACeC,EADf,kBACgCQ,IAFzD,cACQL,EADR,gBAIeA,EAAIC,OAJnB,0G","sources":["components/Reviews/ReviewsStyled.jsx","components/Reviews/Reviews.jsx","services/Api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst Blockquote = styled.blockquote`\n  position: relative;\n  font-size: 16px;\n  font-style: italic;\n  letter-spacing: 1px;\n  line-height: 1.2;\n  text-align: center;\n  color: #161414;\n\n  p {\n    margin-top: 16px;\n    color: #494545;\n  }\n\n  svg {\n    margin-right: 16px;\n  }\n\n  cite {\n    font-style: normal;\n  }\n`;\n\nexport { Blockquote };\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FaQuoteLeft } from 'react-icons/fa';\nimport { getMovieReviews } from 'services/Api';\n// import { Loader } from 'components/Loader';\n// import { Notification } from 'components/Notification';\nimport { Blockquote } from './ReviewsStyled';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n};\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  // const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    getMovieReviews(movieId)\n      .then(({ results }) => {\n        if (!results.length) {\n          // setError('We do not have any reviews for this movie :(');\n          setStatus(Status.REJECTED);\n          return;\n        }\n        setReviews(results);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        // setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {/* {status === Status.PENDING && <Loader />} */}\n      {/* {status === Status.REJECTED && <Notification message={error} />} */}\n      {status === Status.RESOLVED && (\n        <ul>\n          {reviews.map(({ id, author, content, url }) => (\n            <li key={id}>\n              <Blockquote cite={url}>\n                <cite>Author: {author}</cite>\n                <p>\n                  <FaQuoteLeft size={24} />\n                  {content}\n                </p>\n              </Blockquote>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","// приклад запиту\n// https://api.themoviedb.org/3/movie/550?api_key=e0f7258397e08a39ddd2202708092bf4\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e0f7258397e08a39ddd2202708092bf4';\n\nasync function getTrending() {\n  const res = await fetch(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nasync function getMovieById(id) {\n  const res = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nasync function getMovieCast(id) {\n  const res = await fetch(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nasync function getMovieReviews(id) {\n  const res = await fetch(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nasync function getMovieByQuery(query) {\n  const res = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return await res.json();\n}\n\nexport {\n  getTrending,\n  getMovieById,\n  getMovieCast,\n  getMovieReviews,\n  getMovieByQuery,\n};\n"],"names":["Blockquote","styled","Status","movieId","useParams","useState","reviews","setReviews","status","setStatus","useEffect","getMovieReviews","then","results","length","catch","error","map","id","author","content","url","cite","size","BASE_URL","API_KEY","getTrending","fetch","res","json","getMovieById","getMovieCast","getMovieByQuery","query"],"sourceRoot":""}