{"version":3,"file":"static/js/141.2eae825f.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/Api.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Item = styled(NavLink)`\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover:not(.active),\n  &:focus-visible:not(.active) {\n    color: orange;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport * as styl from './MovieList.styled';\n\nexport const MovieList = ({ items }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {items.map(({ id, title }) => (\n        <li key={id}>\n          <styl.Item to={`/movies/${id}`} state={{ from: location }}>\n            <p>{title}</p>\n          </styl.Item>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding-top: 36px;\n  padding-bottom: 36px;\n`;\n\nexport const Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  width: 1280px;\n`;\n\nexport const Form = styled.form`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  margin-bottom: 36px;\n  width: 510px;\n\n  border-radius: 15px;\n`;\nexport const Field = styled.div`\n  position: relative;\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  top: 50%;\n  left: 16px;\n  transform: translateY(-50%);\n\n  padding: 0 4px;\n\n  font-size: 16px;\n\n  color: grey;\n\n  pointer-events: none;\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  Input:focus ~ &,\n  Input:not(:placeholder-shown) ~ & {\n    transform: translateY(-50px) scale(0.9);\n    color: orange;\n    background-color: white;\n  }\n\n  Input:not(:focus) ~ & {\n    color: grey;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 50px;\n  padding: 8px 16px;\n  padding-right: 42px;\n\n  font-size: 16px;\n  letter-spacing: 1.4px;\n\n  color: orange;\n  background-color: transparent;\n\n  border: 1px solid #494545;\n  border-radius: 10px;\n  outline: none;\n\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:focus {\n    border-color: orange;\n    box-shadow: 0px 8px 12px -4px rgba(236, 151, 6, 0.32);\n  }\n\n  &:not(:focus) {\n    color: #494545;\n  }\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 16px;\n  transform: translateY(-50%);\n  padding: 0;\n\n  color: #494545;\n  background-color: transparent;\n\n  border: none;\n\n  cursor: pointer;\n  /* transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1); */\n\n  &:hover,\n  &:focus {\n    color: orange;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { BsSearch, BsFillEmojiFrownFill } from 'react-icons/bs';\nimport { getMovieByQuery } from 'services/Api';\nimport { MovieList } from 'components/MovieList';\nimport Notiflix from 'notiflix';\n\nimport * as styl from './Movies.styled';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n};\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryParam = searchParams.get('query');\n\n  useEffect(() => {\n    if (!queryParam) {\n      return;\n    }\n    setStatus(Status.PENDING);\n    getMovieByQuery(queryParam)\n      .then(({ results }) => {\n        if (!results.length) {\n          setStatus(Status.REJECTED);\n          return;\n        }\n        setMovies(results);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(function (error) {\n        if (error.response) {\n          Notiflix.Notify.warning(error.response.data);\n        } else if (error.request) {\n          Notiflix.Notify.warning('Request failed');\n        } else {\n          Notiflix.Notify.warning('Error', error.message);\n        }\n      })\n      .finally();\n  }, [queryParam]);\n\n  const handleChange = e => {\n    const { value } = e.currentTarget;\n    setQuery(value);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    const searchQuery = query.trim().toLowerCase();\n\n    if (!searchQuery) {\n      toast.error('Search box cannot be empty. Please enter the word.', {\n        icon: <BsFillEmojiFrownFill size={36} fill=\"#ec9706\" />,\n        style: {\n          borderRadius: '10px',\n          background: '#fff',\n          color: '#494545',\n        },\n      });\n      return;\n    }\n    setSearchParams({ query: searchQuery });\n\n    setQuery('');\n  };\n\n  return (\n    <main>\n      <Toaster position=\"top-center\" reverseOrder={false} />\n      <styl.Section>\n        <styl.Container>\n          <styl.Form onSubmit={submitHandler}>\n            <styl.Field>\n              <styl.Input\n                type=\"text\"\n                name=\"query\"\n                value={query}\n                autoComplete=\"off\"\n                placeholder=\" \"\n                onChange={handleChange}\n              />\n              <styl.Label>Search movies</styl.Label>\n            </styl.Field>\n            <styl.Button type=\"submit\">\n              <BsSearch size={24} />\n            </styl.Button>\n          </styl.Form>\n          {status === Status.RESOLVED && <MovieList items={movies} />}\n        </styl.Container>\n      </styl.Section>\n    </main>\n  );\n};\n\nexport default Movies;\n","// приклад запиту\n// https://api.themoviedb.org/3/movie/550?api_key=e0f7258397e08a39ddd2202708092bf4\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e0f7258397e08a39ddd2202708092bf4';\n\nasync function getTrending() {\n  const res = await fetch(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nasync function getMovieById(id) {\n  const res = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nasync function getMovieCast(id) {\n  const res = await fetch(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nasync function getMovieReviews(id) {\n  const res = await fetch(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nasync function getMovieByQuery(query) {\n  const res = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return await res.json();\n}\n\nexport {\n  getTrending,\n  getMovieById,\n  getMovieCast,\n  getMovieReviews,\n  getMovieByQuery,\n};\n"],"names":["Item","styled","NavLink","MovieList","items","location","useLocation","map","id","title","to","state","from","Section","Container","Form","Field","Label","Input","Button","Status","useState","query","setQuery","movies","setMovies","status","setStatus","useSearchParams","searchParams","setSearchParams","queryParam","get","useEffect","getMovieByQuery","then","results","length","catch","error","response","Notiflix","data","request","message","finally","position","reverseOrder","onSubmit","e","preventDefault","searchQuery","trim","toLowerCase","toast","icon","size","fill","style","borderRadius","background","color","type","name","value","autoComplete","placeholder","onChange","currentTarget","BASE_URL","API_KEY","getTrending","fetch","res","json","getMovieById","getMovieCast","getMovieReviews"],"sourceRoot":""}