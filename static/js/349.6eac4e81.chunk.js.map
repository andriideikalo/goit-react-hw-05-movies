{"version":3,"file":"static/js/349.6eac4e81.chunk.js","mappings":"0LAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,0NASJE,EAAOF,EAAAA,GAAAA,EAAH,4C,SCTJG,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1B,OACE,wBACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,yBACE,SAAC,EAAD,CAAWC,GAAE,kBAAaF,GAA1B,UACE,SAAC,EAAD,UAAYC,OAFPD,EADA,KAShB,C,wICbYG,EAAUT,EAAAA,GAAAA,QAAH,uEAKPU,EAAYV,EAAAA,GAAAA,IAAH,4GAOTW,EAAUX,EAAAA,GAAAA,GAAH,sE,4BC2BpB,EAnCa,WACX,OAA4BY,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACFA,EAAQC,QAGbL,EAAUI,EACX,IACAE,OAAM,SAAUC,GACXA,EAAMC,SACRC,IAAAA,OAAAA,QAAwBF,EAAMC,SAASE,MAC9BH,EAAMI,QACfF,IAAAA,OAAAA,QAAwB,kBAExBA,IAAAA,OAAAA,QAAwB,QAASF,EAAMK,QAE1C,IACAC,SACJ,GAAE,KAGD,2BACE,SAAC,EAAD,WACE,UAAC,EAAD,YACE,SAAC,EAAD,iCACCd,IAAU,SAACV,EAAA,EAAD,CAAWC,MAAOS,UAKtC,C,yLCpCKe,EAAW,+BACXC,EAAU,mCAAhB,SAEeb,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACoBc,MAAM,GAAD,OAAIF,EAAJ,wCAA4CC,IADrE,cACQE,EADR,gBAEeA,EAAIC,OAFnB,mHAKeC,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4B3B,GAA5B,uFACoBwB,MAAM,GAAD,OAAIF,EAAJ,kBAAsBtB,EAAtB,oBAAoCuB,IAD7D,cACQE,EADR,gBAEeA,EAAIC,OAFnB,mHAKeE,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4B5B,GAA5B,uFACoBwB,MAAM,GAAD,OAAIF,EAAJ,kBAAsBtB,EAAtB,4BAA4CuB,IADrE,cACQE,EADR,gBAEeA,EAAIC,OAFnB,mHAKeG,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+B7B,GAA/B,uFACoBwB,MAAM,GAAD,OAAIF,EAAJ,kBAAsBtB,EAAtB,4BAA4CuB,IADrE,cACQE,EADR,gBAEeA,EAAIC,OAFnB,mHAKeI,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,uFACoBP,MAAM,GAAD,OAClBF,EADkB,iCACeC,EADf,kBACgCQ,IAFzD,cACQN,EADR,gBAIeA,EAAIC,OAJnB,0G","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","services/Api.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Item = styled(NavLink)`\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover:not(.active),\n  &:focus-visible:not(.active) {\n    color: orange;\n  }\n`;\nexport const Name = styled.p`\n  font-size: 16px;\n`;\n","import PropTypes from 'prop-types';\nimport * as styl from './MovieList.styled';\n\nexport const MovieList = ({ items }) => {\n  return (\n    <ul>\n      {items.map(({ id, title }) => (\n        <li key={id}>\n          <styl.Item to={`/movies/${id}`}>\n            <styl.Name>{title}</styl.Name>\n          </styl.Item>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding-top: 36px;\n  padding-bottom: 36px;\n`;\n\nexport const Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  width: 1280px;\n  color: #494545;\n`;\n\nexport const Heading = styled.h1`\n  margin-bottom: 32px;\n\n  font-size: 56px;\n`;\n","import { useState, useEffect } from 'react';\nimport { getTrending } from '../../services/Api';\nimport { MovieList } from 'components/MovieList';\nimport * as styl from './Home.styled';\nimport Notiflix from 'notiflix';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrending()\n      .then(({ results }) => {\n        if (!results.length) {\n          return;\n        }\n        setMovies(results);\n      })\n      .catch(function (error) {\n        if (error.response) {\n          Notiflix.Notify.warning(error.response.data);\n        } else if (error.request) {\n          Notiflix.Notify.warning('Request failed');\n        } else {\n          Notiflix.Notify.warning('Error', error.message);\n        }\n      })\n      .finally();\n  }, []);\n\n  return (\n    <main>\n      <styl.Section>\n        <styl.Container>\n          <styl.Heading>Trends of the week</styl.Heading>\n          {movies && <MovieList items={movies} />}\n        </styl.Container>\n      </styl.Section>\n    </main>\n  );\n};\n\nexport default Home;\n","// приклад запиту\n// https://api.themoviedb.org/3/movie/550?api_key=e0f7258397e08a39ddd2202708092bf4\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e0f7258397e08a39ddd2202708092bf4';\n\nasync function getTrending() {\n  const res = await fetch(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nasync function getMovieById(id) {\n  const res = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nasync function getMovieCast(id) {\n  const res = await fetch(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nasync function getMovieReviews(id) {\n  const res = await fetch(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nasync function getMovieByQuery(query) {\n  const res = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return await res.json();\n}\n\nexport {\n  getTrending,\n  getMovieById,\n  getMovieCast,\n  getMovieReviews,\n  getMovieByQuery,\n};\n"],"names":["Item","styled","NavLink","Name","MovieList","items","map","id","title","to","Section","Container","Heading","useState","movies","setMovies","useEffect","getTrending","then","results","length","catch","error","response","Notiflix","data","request","message","finally","BASE_URL","API_KEY","fetch","res","json","getMovieById","getMovieCast","getMovieReviews","getMovieByQuery","query"],"sourceRoot":""}