{"version":3,"file":"static/js/804.814a1018.chunk.js","mappings":"uOAEaA,EAAUC,EAAAA,GAAAA,EAAH,+GAMPC,EAAgBD,EAAAA,GAAAA,GAAH,sFAKbE,EAAUF,EAAAA,GAAAA,GAAH,4G,4BCPdG,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAiDZ,EA9CgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAASH,GAArC,eAAOM,EAAP,KAAeC,EAAf,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACRD,EAAUP,IACVS,EAAAA,EAAAA,IAAgBR,GACbS,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACFA,EAAQC,QAIbP,EAAWM,GACXJ,EAAUP,IAJRO,EAAUP,EAKb,IACAa,OAAM,SAAUC,GACXA,EAAMC,SACRC,IAAAA,OAAAA,QAAwBF,EAAMC,SAASE,MAC9BH,EAAMI,QACfF,IAAAA,OAAAA,QAAwB,yBAExBA,IAAAA,OAAAA,QAAwB,QAASF,EAAMK,QAE1C,IACAC,SACJ,GAAE,CAACnB,KAGF,8BACGK,IAAWN,IACV,wBACGI,EAAQiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,IAAxB,OACX,0BACE,UAAC,EAAD,CAAcC,KAAMD,EAApB,WACE,UAAC,EAAD,sBAA6BF,MAC7B,UAAC,EAAD,eAAgBC,EAAhB,WAHMF,EADC,OAYtB,C,yLCtDKK,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACoBC,MAAM,GAAD,OAAIH,EAAJ,wCAA4CC,IADrE,cACQG,EADR,gBAEeA,EAAIC,OAFnB,mHAKeC,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BX,GAA5B,uFACoBQ,MAAM,GAAD,OAAIH,EAAJ,kBAAsBL,EAAtB,oBAAoCM,IAD7D,cACQG,EADR,gBAEeA,EAAIC,OAFnB,mHAKeE,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BZ,GAA5B,uFACoBQ,MAAM,GAAD,OAAIH,EAAJ,kBAAsBL,EAAtB,4BAA4CM,IADrE,cACQG,EADR,gBAEeA,EAAIC,OAFnB,mHAKevB,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+Ba,GAA/B,uFACoBQ,MAAM,GAAD,OAAIH,EAAJ,kBAAsBL,EAAtB,4BAA4CM,IADrE,cACQG,EADR,gBAEeA,EAAIC,OAFnB,mHAKeG,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,uFACoBN,MAAM,GAAD,OAClBH,EADkB,iCACeC,EADf,kBACgCQ,IAFzD,cACQL,EADR,gBAIeA,EAAIC,OAJnB,0G","sources":["components/Reviews/ReviewsStyled.jsx","components/Reviews/Reviews.jsx","services/Api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Reviews = styled.p`\n  position: relative;\n  letter-spacing: 1px;\n  line-height: 1.2;\n  color: #494545;\n`;\nexport const ContextAuthor = styled.li`\n  margin-top: 16px;\n  font-size: 16px;\n  font-weight: 700;\n`;\nexport const Context = styled.li`\n  margin-top: 16px;\n  font-size: 14px;\n  font-weight: 400;\n  text-indent: 30px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/Api';\nimport * as styl from './ReviewsStyled';\nimport Notiflix from 'notiflix';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n};\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    getMovieReviews(movieId)\n      .then(({ results }) => {\n        if (!results.length) {\n          setStatus(Status.REJECTED);\n          return;\n        }\n        setReviews(results);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(function (error) {\n        if (error.response) {\n          Notiflix.Notify.warning(error.response.data);\n        } else if (error.request) {\n          Notiflix.Notify.warning('XMLHttpRequest failed');\n        } else {\n          Notiflix.Notify.warning('Error', error.message);\n        }\n      })\n      .finally();\n  }, [movieId]);\n\n  return (\n    <>\n      {status === Status.RESOLVED && (\n        <ul>\n          {reviews.map(({ id, author, content, url }) => (\n            <div key={id}>\n              <styl.Reviews cite={url}>\n                <styl.ContextAuthor>Author: {author}</styl.ContextAuthor>\n                <styl.Context> {content} </styl.Context>\n              </styl.Reviews>\n            </div>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","// приклад запиту\n// https://api.themoviedb.org/3/movie/550?api_key=e0f7258397e08a39ddd2202708092bf4\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e0f7258397e08a39ddd2202708092bf4';\n\nasync function getTrending() {\n  const res = await fetch(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nasync function getMovieById(id) {\n  const res = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nasync function getMovieCast(id) {\n  const res = await fetch(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nasync function getMovieReviews(id) {\n  const res = await fetch(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nasync function getMovieByQuery(query) {\n  const res = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return await res.json();\n}\n\nexport {\n  getTrending,\n  getMovieById,\n  getMovieCast,\n  getMovieReviews,\n  getMovieByQuery,\n};\n"],"names":["Reviews","styled","ContextAuthor","Context","Status","movieId","useParams","useState","reviews","setReviews","status","setStatus","useEffect","getMovieReviews","then","results","length","catch","error","response","Notiflix","data","request","message","finally","map","id","author","content","url","cite","BASE_URL","API_KEY","getTrending","fetch","res","json","getMovieById","getMovieCast","getMovieByQuery","query"],"sourceRoot":""}