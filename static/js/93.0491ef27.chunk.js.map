{"version":3,"file":"static/js/93.0491ef27.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/Api.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n\n  li {\n    flex-basis: calc((50% - 7 * 16px) / 8);\n  }\n\n  img {\n    width: 140px;\n    height: 140px;\n    margin-bottom: 16px;\n    object-fit: cover;\n\n    border-radius: 10px;\n  }\n\n  p {\n    font-size: 12px;\n  }\n`;\n\nconst Character = styled.p`\n  margin-top: 4px;\n  color: #808080;\n`;\n\nexport { List, Character };\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/Api';\n// import { Loader } from 'components/Loader';\n// import { Notification } from 'components/Notification';\nimport { List, Character } from './Cast.styled';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n};\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  // const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    getMovieCast(movieId)\n      .then(({ cast }) => {\n        // if (!cast.length) {\n        //   setError(\n        //     'We are sorry, but we did not find any information about cast :('\n        //   );\n        //   setStatus(Status.REJECTED);\n        //   return;\n        // }\n        setCast(cast);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        // setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {/* {status === Status.PENDING && <Loader />} \n       {status === Status.REJECTED && <Notification message={error} />}  */}\n      {status === Status.RESOLVED && (\n        <List>\n          {cast.map(({ id, character, name, profile_path }) => (\n            <li key={id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                alt={name}\n              />\n              <p>{name}</p>\n              <Character>Character: {character}</Character>\n            </li>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e0f7258397e08a39ddd2202708092bf4';\n\nasync function getTrending() {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return await response.json();\n  }\n  return await Promise.reject(\n    new Error(\"Oops, something went wrong... We can't load trending movies :(\")\n  );\n}\n\nasync function getMovieById(id) {\n  const response = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  if (response.ok) {\n    return await response.json();\n  }\n  return await Promise.reject(\n    new Error(\n      'We are sorry, but we did not find any information about movie :('\n    )\n  );\n}\n\nasync function getMovieCast(id) {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return await response.json();\n  }\n  return await Promise.reject(\n    new Error('We are sorry, but we did not find any information about cast :(')\n  );\n}\n\nasync function getMovieReviews(id) {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return await response.json();\n  }\n  return await Promise.reject(\n    new Error('We do not have any reviews for this movie :(')\n  );\n}\n\nasync function getMovieByQuery(query) {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  if (response.ok) {\n    return await response.json();\n  }\n  return await Promise.reject(\n    new Error(`No results containing ${query} were found.`)\n  );\n}\n\nexport {\n  getTrending,\n  getMovieById,\n  getMovieCast,\n  getMovieReviews,\n  getMovieByQuery,\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["List","styled","Character","Status","movieId","useParams","useState","cast","setCast","status","setStatus","useEffect","getMovieCast","then","catch","error","map","id","character","name","profile_path","src","alt","BASE_URL","API_KEY","getTrending","fetch","response","ok","json","Promise","reject","Error","getMovieById","getMovieReviews","getMovieByQuery","query","asyncGeneratorStep","gen","resolve","_next","_throw","key","arg","info","value","done","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}