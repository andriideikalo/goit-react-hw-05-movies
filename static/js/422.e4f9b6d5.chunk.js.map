{"version":3,"file":"static/js/422.e4f9b6d5.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/Api.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Section = styled.section`\n  padding-top: 24px;\n  padding-bottom: 24px;\n`;\n\nconst Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 1280px;\n`;\n\nconst MovieWrapper = styled.div`\n  display: flex;\n  gap: 32px;\n  color: #494545;\n  margin-top: 24px;\n  margin-bottom: 24px;\n\n  img {\n    width: 268px;\n  }\n  p {\n    margin-bottom: 16px;\n  }\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 36px;\n\n  font-size: 42px;\n`;\nconst GenreWrapper = styled.p`\n  display: flex;\n  gap: 12px;\n`;\n\nconst Genre = styled.span`\n  padding: 4px 12px;\n  color: #494545;\n  font-size: 16px;\n  line-height: 1.4;\n`;\n\nconst AdditionalInfo = styled.div`\n  margin-bottom: 24px;\n  h2 {\n    margin-bottom: 24px;\n    color: #494545;\n\n    font-size: 36px;\n  }\n  ul {\n    display: flex;\n    gap: 16px;\n    color: #494545;\n  }\n`;\n\nconst NavItem = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  padding-top: 8px;\n  padding-bottom: 8px;\n\n  text-transform: capitalize;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.active {\n    color: #ec9706;\n  }\n\n  &:hover:not(.active),\n  &:focus-visible:not(.active) {\n    color: #ec9706;\n  }\n`;\n\nexport {\n  Section,\n  Container,\n  MovieWrapper,\n  Title,\n  GenreWrapper,\n  Genre,\n  AdditionalInfo,\n  NavItem,\n};\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { IoIosPeople, IoIosPaper, IoIosArrowDropleft } from 'react-icons/io';\nimport { getMovieById } from 'services/Api';\nimport {\n  Section,\n  Container,\n  MovieWrapper,\n  Title,\n  GenreWrapper,\n  Genre,\n  AdditionalInfo,\n  NavItem,\n} from './MovieDetails.styled';\n// import { Notification } from 'components/Notification';\n// import { Loader } from 'components/Loader';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n};\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  // const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const location = useLocation();\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    getMovieById(movieId)\n      .then(movieInfo => {\n        if (!Object.keys(movieInfo).length) {\n          // setError(\n          //   'We are sorry, but we did not find any information about movie :('\n          // );\n          setStatus(Status.REJECTED);\n          return;\n        }\n        setMovie(movieInfo);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        // setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, [movieId]);\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <main>\n      <Section>\n        <Container>\n          <NavItem to={backLinkHref}>\n            <IoIosArrowDropleft size={24} />\n            <span>HOME</span>\n          </NavItem>\n          {/* {status === Status.PENDING && <Loader />} */}\n          {/* {status === Status.REJECTED && <Notification message={error} />} */}\n          {status === Status.RESOLVED && (\n            <>\n              <MovieWrapper>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                  alt={movie.title}\n                />\n                <div>\n                  <Title>\n                    {movie.title} ({new Date(movie.release_date).getFullYear()})\n                  </Title>\n                  <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n                  <p>\n                    <b>Overview</b>\n                  </p>\n                  <p>{movie.overview}</p>\n                  <p>\n                    <b>Genres</b>\n                  </p>\n                  <GenreWrapper>\n                    {movie.genres.map(({ name }) => (\n                      <Genre key={name}>{name}</Genre>\n                    ))}\n                  </GenreWrapper>\n                </div>\n              </MovieWrapper>\n              <AdditionalInfo>\n                <h2>Additional information</h2>\n                <ul>\n                  <li>\n                    <NavItem to=\"cast\" state={{ from: backLinkHref }}>\n                      <IoIosPeople size={24} />\n                      <span>Cast</span>\n                    </NavItem>\n                  </li>\n                  <li>\n                    <NavItem to=\"reviews\" state={{ from: backLinkHref }}>\n                      <IoIosPaper size={24} />\n                      <span>Reviews</span>\n                    </NavItem>\n                  </li>\n                </ul>\n              </AdditionalInfo>\n              <Suspense fallback={null}>\n                <Outlet />\n              </Suspense>\n            </>\n          )}\n        </Container>\n      </Section>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","// приклад запиту\n// https://api.themoviedb.org/3/movie/550?api_key=e0f7258397e08a39ddd2202708092bf4\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e0f7258397e08a39ddd2202708092bf4';\n\nasync function getTrending() {\n  const res = await fetch(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nasync function getMovieById(id) {\n  const res = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nasync function getMovieCast(id) {\n  const res = await fetch(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nasync function getMovieReviews(id) {\n  const res = await fetch(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n  return await res.json();\n}\n\nasync function getMovieByQuery(query) {\n  const res = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return await res.json();\n}\n\nexport {\n  getTrending,\n  getMovieById,\n  getMovieCast,\n  getMovieReviews,\n  getMovieByQuery,\n};\n"],"names":["Section","styled","Container","MovieWrapper","Title","GenreWrapper","Genre","AdditionalInfo","NavItem","NavLink","Status","movieId","useParams","useState","movie","setMovie","status","setStatus","location","useLocation","useEffect","getMovieById","then","movieInfo","Object","keys","length","catch","error","backLinkHref","state","from","to","size","src","poster_path","alt","title","Date","release_date","getFullYear","Math","round","vote_average","overview","genres","map","name","Suspense","fallback","BASE_URL","API_KEY","getTrending","fetch","res","json","id","getMovieCast","getMovieReviews","getMovieByQuery","query"],"sourceRoot":""}